<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="JWTTokenAuthenticator.php" path="/Security">
    <totals>
      <lines total="93" comments="47" code="46" executable="13" executed="0" percent="0.00"/>
      <methods count="4" tested="0" percent="0.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Security\JWTTokenAuthenticator" start="21" executable="13" executed="0" crap="30">
      <namespace name="App\Security"/>
      <method name="supports" signature="supports(Symfony\Component\HttpFoundation\Request $request): bool" start="28" end="31" crap="6" executable="1" executed="0" coverage="0"/>
      <method name="checkCredentials" signature="checkCredentials($credentials, Symfony\Component\Security\Core\User\UserInterface $user): bool" start="39" end="42" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="onAuthenticationFailure" signature="onAuthenticationFailure(Symfony\Component\HttpFoundation\Request $request, Symfony\Component\Security\Core\Exception\AuthenticationException $authException): \Symfony\Component\HttpFoundation\JsonResponse|\Symfony\Component\HttpFoundation\Response|null" start="51" end="61" crap="2" executable="6" executed="0" coverage="0"/>
      <method name="start" signature="start(Symfony\Component\HttpFoundation\Request $request, Symfony\Component\Security\Core\Exception\AuthenticationException $authException): Symfony\Component\HttpFoundation\Response" start="84" end="91" crap="2" executable="5" executed="0" coverage="0"/>
    </class>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> * @license https://opensource.org/licenses/MIT MIT License</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * @link    https://miw.etsisi.upm.es/ ETS de Ingenier&#xED;a de Sistemas Inform&#xE1;ticos</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="7"/>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Security</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Utility\Utils</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BaseAuthenticator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\HttpFoundation\JsonResponse</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\HttpFoundation\Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\HttpFoundation\Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Security\Core\Exception\AuthenticationException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Security\Core\User\UserInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT"> * Class JWTTokenAuthenticator</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="21">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JWTTokenAuthenticator</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BaseAuthenticator</token>
      </line>
      <line no="22">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     * Does the authenticator support the given Request?</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     * If this returns false, the authenticator will be skipped.</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">supports</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">supports</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isMethod</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">METHOD_POST</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     * If getUser() returns a User object, this method is called.</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     * Your job is to verify if the credentials are correct.</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     * @param mixed $credentials</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">checkCredentials</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$credentials</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRoles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="43"/>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * This is called if authentication fails.</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     * @param Request $request</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     * @param AuthenticationException $authException</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     * @return JsonResponse|Response|null</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">onAuthenticationFailure</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">AuthenticationException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$authException</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonResponse</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">Response</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_FORBIDDEN</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$statusTexts</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_FORBIDDEN</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">': '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$authException</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessageKey</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_FORBIDDEN</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_COMMENT">// 403</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     * Returns a response that directs the user to authenticate.</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     * This is called when an anonymous request accesses a resource that</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     * requires authentication. The job of this method is to return some</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     * response that "helps" the user start into the authentication process.</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="70">
        <token name="T_DOC_COMMENT">     * Examples:</token>
      </line>
      <line no="71">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="72">
        <token name="T_DOC_COMMENT">     * - For a form login, you might redirect to the login page</token>
      </line>
      <line no="73">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="74">
        <token name="T_DOC_COMMENT">     *     return new RedirectResponse('/login');</token>
      </line>
      <line no="75">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="76">
        <token name="T_DOC_COMMENT">     * - For an API token authentication system, you return a 401 response</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">     *     return new Response('Auth header required', 401);</token>
      </line>
      <line no="79">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="80">
        <token name="T_DOC_COMMENT">     * @param Request $request</token>
      </line>
      <line no="81">
        <token name="T_DOC_COMMENT">     * @param AuthenticationException|null $authException</token>
      </line>
      <line no="82">
        <token name="T_DOC_COMMENT">     * @return Response</token>
      </line>
      <line no="83">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">start</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AuthenticationException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$authException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_UNAUTHORIZED</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_VARIABLE">$statusTexts</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">401</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getFormat</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="93"/>
    </source>
  </file>
</phpunit>

<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="SecurityController.php" path="/Controller">
    <totals>
      <lines total="111" comments="31" code="80" executable="37" executed="37" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Controller\SecurityController" start="24" executable="37" executed="37" crap="11">
      <namespace name="App\Controller"/>
      <method name="__construct" signature="__construct(Doctrine\ORM\EntityManagerInterface $entityManager, Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler $successHandler, Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler $failureHandler, Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface $passwordHasher)" start="40" end="46" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="logincheckAction" signature="logincheckAction(Symfony\Component\HttpFoundation\Request $request): \Lexik\Bundle\JWTAuthenticationBundle\Response\JWTAuthenticationSuccessResponse|\Symfony\Component\HttpFoundation\Response" start="58" end="109" crap="10" executable="36" executed="36" coverage="100"/>
    </class>
    <coverage>
      <line nr="46">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="61">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="62">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="63">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="64">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
      </line>
      <line nr="65">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
      </line>
      <line nr="67">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="68">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="70">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="71">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="73">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
      </line>
      <line nr="74">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
      </line>
      <line nr="75">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
      </line>
      <line nr="76">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
      </line>
      <line nr="78">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
      </line>
      <line nr="79">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
      </line>
      <line nr="84">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="85">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="86">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="87">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="88">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
      </line>
      <line nr="90">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="91">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
      </line>
      <line nr="92">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
      </line>
      <line nr="93">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
      </line>
      <line nr="98">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="99">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="100">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="102">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="103">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="107">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="108">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="94">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser2&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser3&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser4&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser5&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction401Unauthorized with data set &quot;fakeUser1&quot;"/>
      </line>
      <line nr="101">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="104">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="105">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="106">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_user&quot;"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogincheckAction200Ok with data set &quot;role_admin&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> * @license https://opensource.org/licenses/MIT MIT License</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * @link    https://www.etsisi.upm.es/ ETS de Ingenier&#xED;a de Sistemas Inform&#xE1;ticos</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="7"/>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Controller</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Entity\User</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Doctrine\ORM\EntityManagerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Lexik\Bundle\JWTAuthenticationBundle\Response\JWTAuthenticationSuccessResponse</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Bundle\FrameworkBundle\Controller\AbstractController</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\HttpFoundation\Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Routing\Annotation\Route</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\HttpFoundation\Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Security\Core\Exception\BadCredentialsException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT"> * Class SecurityController</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="24">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SecurityController</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AbstractController</token>
      </line>
      <line no="25">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// Ruta al controlador de seguridad</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PATH_LOGIN_CHECK</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/api/v1/login_check'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">USER_ATTR_PASSWD</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">USER_ATTR_EMAIL</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     * SecurityController constructor.</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     * @param EntityManagerInterface $entityManager</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT">     * @param Authentication\AuthenticationSuccessHandler $successHandler</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     * @param Authentication\AuthenticationFailureHandler $failureHandler</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     * @param UserPasswordHasherInterface $passwordHasher</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EntityManagerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$entityManager</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Authentication\AuthenticationSuccessHandler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$successHandler</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Authentication\AuthenticationFailureHandler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$failureHandler</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserPasswordHasherInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$passwordHasher</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47"/>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     * @Route(</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     *     path=SecurityController::PATH_LOGIN_CHECK,</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     *     name="app_security_logincheck",</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     *     methods={ Request::METHOD_POST }</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     * )</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     * @param Request $request</token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     * @return JWTAuthenticationSuccessResponse|Response</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     * @throws \JsonException</token>
      </line>
      <line no="57">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">logincheckAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JWTAuthenticationSuccessResponse</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">Response</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Obtenci&#xF3;n datos: Form | JSON | URLencoded</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">headers</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'content-type'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'application/x-www-form-urlencoded'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_COMMENT">// Formulario</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">USER_ATTR_EMAIL</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">USER_ATTR_PASSWD</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$req_data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_decode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">json_last_error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JSON_ERROR_NONE</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_COMMENT">// Contenido JSON</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$req_data</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">USER_ATTR_EMAIL</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$req_data</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">USER_ATTR_PASSWD</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// URL codificado</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">explode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'&amp;'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$keyValuePair</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">explode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'='</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$param</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keyValuePair</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">USER_ATTR_EMAIL</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">urldecode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keyValuePair</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keyValuePair</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">USER_ATTR_PASSWD</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">urldecode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keyValuePair</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="83"/>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">            </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entityManager</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRepository</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">findOneBy</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">USER_ATTR_EMAIL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">passwordHasher</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isPasswordValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">failureHandler</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">onAuthenticationFailure</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">                </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BadCredentialsException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="96"/>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** @var JWTAuthenticationSuccessResponse $response */</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">successHandler</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handleAuthenticationSuccess</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$jwt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_decode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">512</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JSON_THROW_ON_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">token</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setData</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'token_type'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Bearer'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'access_token'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jwt</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'expires_in'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">60</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">60</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">headers</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">set</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Authorization'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Bearer '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$jwt</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="110">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="111"/>
    </source>
  </file>
</phpunit>

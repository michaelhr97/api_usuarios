<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ApiUsersCommandController.php" path="/Controller">
    <totals>
      <lines total="267" comments="81" code="186" executable="122" executed="122" percent="100.00"/>
      <methods count="4" tested="4" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Controller\ApiUsersCommandController" start="27" executable="122" executed="122" crap="24">
      <namespace name="App\Controller"/>
      <method name="__construct" signature="__construct(Doctrine\ORM\EntityManagerInterface $entityManager, Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface $passwordHasher)" start="31" end="35" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="deleteAction" signature="deleteAction(Symfony\Component\HttpFoundation\Request $request, int $userId): Symfony\Component\HttpFoundation\Response" start="51" end="83" crap="4" executable="21" executed="21" coverage="100"/>
      <method name="postAction" signature="postAction(Symfony\Component\HttpFoundation\Request $request): Symfony\Component\HttpFoundation\Response" start="99" end="160" crap="6" executable="43" executed="43" coverage="100"/>
      <method name="putAction" signature="putAction(Symfony\Component\HttpFoundation\Request $request, int $userId): Symfony\Component\HttpFoundation\Response" start="177" end="265" crap="13" executable="57" executed="57" coverage="100"/>
    </class>
    <coverage>
      <line nr="35">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;putAction401&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;postAction401&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;deleteAction401&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_email&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;nothing&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_passwd&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testDeleteUserAction204NoContent"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;deleteAction404&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="53">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;deleteAction401&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testDeleteUserAction204NoContent"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;deleteAction404&quot;"/>
      </line>
      <line nr="54">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;deleteAction401&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testDeleteUserAction204NoContent"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;deleteAction404&quot;"/>
      </line>
      <line nr="55">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;deleteAction401&quot;"/>
      </line>
      <line nr="56">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;deleteAction401&quot;"/>
      </line>
      <line nr="57">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;deleteAction401&quot;"/>
      </line>
      <line nr="62">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testDeleteUserAction204NoContent"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;deleteAction404&quot;"/>
      </line>
      <line nr="63">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
      </line>
      <line nr="64">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
      </line>
      <line nr="65">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
      </line>
      <line nr="71">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testDeleteUserAction204NoContent"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;deleteAction404&quot;"/>
      </line>
      <line nr="72">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testDeleteUserAction204NoContent"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;deleteAction404&quot;"/>
      </line>
      <line nr="73">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testDeleteUserAction204NoContent"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;deleteAction404&quot;"/>
      </line>
      <line nr="75">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testDeleteUserAction204NoContent"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;deleteAction404&quot;"/>
      </line>
      <line nr="76">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;deleteAction404&quot;"/>
      </line>
      <line nr="79">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testDeleteUserAction204NoContent"/>
      </line>
      <line nr="80">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testDeleteUserAction204NoContent"/>
      </line>
      <line nr="82">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testDeleteUserAction204NoContent"/>
      </line>
      <line nr="101">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;postAction401&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_email&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;nothing&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_passwd&quot;"/>
      </line>
      <line nr="102">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;postAction401&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_email&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;nothing&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_passwd&quot;"/>
      </line>
      <line nr="103">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;postAction401&quot;"/>
      </line>
      <line nr="104">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;postAction401&quot;"/>
      </line>
      <line nr="105">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;postAction401&quot;"/>
      </line>
      <line nr="110">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_email&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;nothing&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_passwd&quot;"/>
      </line>
      <line nr="111">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
      </line>
      <line nr="112">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
      </line>
      <line nr="113">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
      </line>
      <line nr="117">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_email&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;nothing&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_passwd&quot;"/>
      </line>
      <line nr="118">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_email&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;nothing&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_passwd&quot;"/>
      </line>
      <line nr="120">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_email&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;nothing&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_passwd&quot;"/>
      </line>
      <line nr="122">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_email&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;nothing&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction422UnprocessableEntity with data set &quot;no_passwd&quot;"/>
      </line>
      <line nr="126">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
      </line>
      <line nr="127">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
      </line>
      <line nr="128">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
      </line>
      <line nr="130">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
      </line>
      <line nr="131">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction400BadRequest"/>
      </line>
      <line nr="135">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="136">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="137">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="140">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="141">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="142">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="144">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="146">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="148">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="149">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="151">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="152">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="153">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="156">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="157">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="179">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;putAction401&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="180">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;putAction401&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="181">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;putAction401&quot;"/>
      </line>
      <line nr="182">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;putAction401&quot;"/>
      </line>
      <line nr="183">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;putAction401&quot;"/>
      </line>
      <line nr="189">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="191">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="192">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="194">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
      </line>
      <line nr="195">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
      </line>
      <line nr="196">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
      </line>
      <line nr="200">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="201">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="204">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="205">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="206">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="208">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="209">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus404NotFound with data set &quot;putAction404&quot;"/>
      </line>
      <line nr="213">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
      </line>
      <line nr="214">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
      </line>
      <line nr="215">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
      </line>
      <line nr="216">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
      </line>
      <line nr="217">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
      </line>
      <line nr="222">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
      </line>
      <line nr="223">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
      </line>
      <line nr="224">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
      </line>
      <line nr="225">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
      </line>
      <line nr="227">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
      </line>
      <line nr="228">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction400BadRequest"/>
      </line>
      <line nr="230">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="234">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="236">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="237">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="238">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="240">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="244">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="246">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="247">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="249">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="250">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="251">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="255">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="258">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="260">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="261">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="262">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="58">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;deleteAction401&quot;"/>
      </line>
      <line nr="59">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;deleteAction401&quot;"/>
      </line>
      <line nr="66">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
      </line>
      <line nr="67">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;deleteAction403&quot;"/>
      </line>
      <line nr="106">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;postAction401&quot;"/>
      </line>
      <line nr="107">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;postAction401&quot;"/>
      </line>
      <line nr="114">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
      </line>
      <line nr="115">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;postAction403&quot;"/>
      </line>
      <line nr="138">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="143">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="154">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="155">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="158">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="159">
        <covered by="App\Tests\Controller\ApiResultsControllerTest::testPostResultAction201Created"/>
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPostUserAction201Created"/>
      </line>
      <line nr="184">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;putAction401&quot;"/>
      </line>
      <line nr="185">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus401Unauthorized with data set &quot;putAction401&quot;"/>
      </line>
      <line nr="197">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
      </line>
      <line nr="198">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testUserStatus403Forbidden with data set &quot;putAction403&quot;"/>
      </line>
      <line nr="218">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
      </line>
      <line nr="219">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction412PreconditionFailed"/>
      </line>
      <line nr="239">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="252">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="253">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction403Forbidden"/>
      </line>
      <line nr="263">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
      <line nr="264">
        <covered by="App\Tests\Controller\ApiUsersControllerTest::testPutUserAction209ContentReturned"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Controller</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Entity\User</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Utility\Utils</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Doctrine\ORM\EntityManagerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Bundle\FrameworkBundle\Controller\AbstractController</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\HttpFoundation\Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\HttpFoundation\Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Routing\Annotation\Route</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT"> * Class ApiUsersController</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT"> * @package App\Controller</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT"> * @Route(</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT"> *     path=ApiUsersQueryInterface::RUTA_API,</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT"> *     name="api_users_"</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT"> * )</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="27">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApiUsersCommandController</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AbstractController</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ApiUsersCommandInterface</token>
      </line>
      <line no="28">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ROLE_ADMIN</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ROLE_ADMIN'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EntityManagerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$entityManager</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserPasswordHasherInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$passwordHasher</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     * @see ApiUsersCommandInterface::deleteAction()</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     * @Route(</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     *     path="/{userId}.{_format}",</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     *     defaults={ "_format": null },</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     *     requirements={</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     *          "userId": "\d+",</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     *         "_format": "json|xml"</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     *     },</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     *     methods={ Request::METHOD_DELETE },</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     *     name="delete"</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     * )</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">deleteAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$format</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getFormat</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGranted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'IS_AUTHENTICATED_FULLY'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// 401</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_UNAUTHORIZED</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'`Unauthorized`: Invalid credentials.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$format</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Puede borrar un usuario s&#xF3;lo si tiene ROLE_ADMIN</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGranted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ROLE_ADMIN</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// 403</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_FORBIDDEN</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'`Forbidden`: you don\'t have permission to access'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$format</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="69"/>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** @var User $user */</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entityManager</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRepository</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">find</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$userId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74"/>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_COMMENT">// 404 - Not Found</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_NOT_FOUND</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$format</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="78"/>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entityManager</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">remove</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entityManager</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">flush</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="81"/>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">apiResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_NO_CONTENT</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="84"/>
      <line no="85">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="86">
        <token name="T_DOC_COMMENT">     * @see ApiUsersCommandInterface::postAction()</token>
      </line>
      <line no="87">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="88">
        <token name="T_DOC_COMMENT">     * @Route(</token>
      </line>
      <line no="89">
        <token name="T_DOC_COMMENT">     *     path=".{_format}",</token>
      </line>
      <line no="90">
        <token name="T_DOC_COMMENT">     *     defaults={ "_format": null },</token>
      </line>
      <line no="91">
        <token name="T_DOC_COMMENT">     *     requirements={</token>
      </line>
      <line no="92">
        <token name="T_DOC_COMMENT">     *         "_format": "json|xml"</token>
      </line>
      <line no="93">
        <token name="T_DOC_COMMENT">     *     },</token>
      </line>
      <line no="94">
        <token name="T_DOC_COMMENT">     *     methods={ Request::METHOD_POST },</token>
      </line>
      <line no="95">
        <token name="T_DOC_COMMENT">     *     name="post"</token>
      </line>
      <line no="96">
        <token name="T_DOC_COMMENT">     * )</token>
      </line>
      <line no="97">
        <token name="T_DOC_COMMENT">     * @throws JsonException</token>
      </line>
      <line no="98">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">postAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$format</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getFormat</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGranted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'IS_AUTHENTICATED_FULLY'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// 401</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_UNAUTHORIZED</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'`Unauthorized`: Invalid credentials.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$format</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Puede crear un usuario s&#xF3;lo si tiene ROLE_ADMIN</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGranted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ROLE_ADMIN</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// 403</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_FORBIDDEN</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'`Forbidden`: you don\'t have permission to access'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$format</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_decode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">512</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JSON_THROW_ON_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="119"/>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">EMAIL_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PASSWD_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// 422 - Unprocessable Entity -&gt; Faltan datos</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_UNPROCESSABLE_ENTITY</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$format</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="124"/>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// hay datos -&gt; procesarlos</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user_exist</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entityManager</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRepository</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">findOneBy</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">EMAIL_ATTR</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">EMAIL_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="129"/>
      <line no="130">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user_exist</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// 400 - Bad Request</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_BAD_REQUEST</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$format</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="133"/>
      <line no="134">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// 201 - Created</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">strval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">EMAIL_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">strval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PASSWD_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// hash the password (based on the security.yaml config for the $user class)</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hashedPassword</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">passwordHasher</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hashPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">strval</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PASSWD_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$hashedPassword</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// roles</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">        </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ROLES_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setRoles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ROLES_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="147"/>
      <line no="148">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entityManager</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">persist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entityManager</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">flush</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="150"/>
      <line no="151">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">apiResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_CREATED</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">USER_ATTR</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$format</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Location'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getScheme</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'://'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getHttpHost</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">ApiUsersQueryInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">RUTA_API</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="161"/>
      <line no="162">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="163">
        <token name="T_DOC_COMMENT">     * @see ApiUsersCommandInterface::putAction()</token>
      </line>
      <line no="164">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="165">
        <token name="T_DOC_COMMENT">     * @Route(</token>
      </line>
      <line no="166">
        <token name="T_DOC_COMMENT">     *     path="/{userId}.{_format}",</token>
      </line>
      <line no="167">
        <token name="T_DOC_COMMENT">     *     defaults={ "_format": null },</token>
      </line>
      <line no="168">
        <token name="T_DOC_COMMENT">     *     requirements={</token>
      </line>
      <line no="169">
        <token name="T_DOC_COMMENT">     *          "userId": "\d+",</token>
      </line>
      <line no="170">
        <token name="T_DOC_COMMENT">     *         "_format": "json|xml"</token>
      </line>
      <line no="171">
        <token name="T_DOC_COMMENT">     *     },</token>
      </line>
      <line no="172">
        <token name="T_DOC_COMMENT">     *     methods={ Request::METHOD_PUT },</token>
      </line>
      <line no="173">
        <token name="T_DOC_COMMENT">     *     name="put"</token>
      </line>
      <line no="174">
        <token name="T_DOC_COMMENT">     * )</token>
      </line>
      <line no="175">
        <token name="T_DOC_COMMENT">     * @throws JsonException</token>
      </line>
      <line no="176">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">putAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$format</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getFormat</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGranted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'IS_AUTHENTICATED_FULLY'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// 401</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_UNAUTHORIZED</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'`Unauthorized`: Invalid credentials.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$format</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Puede editar otro usuario diferente s&#xF3;lo si tiene ROLE_ADMIN</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** @var User $user */</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getUser</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$userId</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGranted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ROLE_ADMIN</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// 403</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_FORBIDDEN</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'`Forbidden`: you don\'t have permission to access'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$format</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_decode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="202"/>
      <line no="203">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/** @var User $user */</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entityManager</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRepository</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">find</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$userId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207"/>
      <line no="208">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// 404 - Not Found</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_NOT_FOUND</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$format</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="211"/>
      <line no="212">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Optimistic Locking (strong validation, password included)</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$etag</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">md5</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JSON_THROW_ON_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">headers</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">has</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'If-Match'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$etag</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_EQUAL">!=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">headers</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'If-Match'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_PRECONDITION_FAILED</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'PRECONDITION FAILED: one or more conditions given evaluated to false'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$format</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// 412</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="221"/>
      <line no="222">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">EMAIL_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$user_exist</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entityManager</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getRepository</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">findOneBy</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">EMAIL_ATTR</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">EMAIL_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="226"/>
      <line no="227">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user_exist</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// 400 - Bad Request</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_BAD_REQUEST</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$format</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">EMAIL_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="232"/>
      <line no="233">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// password</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PASSWD_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// hash the password (based on the security.yaml config for the $user class)</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$hashedPassword</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">passwordHasher</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hashPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PASSWD_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$hashedPassword</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="242"/>
      <line no="243">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// roles</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ROLES_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ROLE_ADMIN</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ROLES_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="247">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isGranted</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ROLE_ADMIN</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="249">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">errorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// 403</token>
      </line>
      <line no="250">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">Response</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HTTP_FORBIDDEN</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'`Forbidden`: you don\'t have permission to access'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="252">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$format</token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setRoles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$postData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ROLES_ATTR</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="257"/>
      <line no="258">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entityManager</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">flush</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="259"/>
      <line no="260">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Utils</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">apiResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="261">
        <token name="T_WHITESPACE">            </token>
        <token name="T_LNUMBER">209</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE">                        </token>
        <token name="T_COMMENT">// 209 - Content Returned</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">USER_ATTR</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="263">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$format</token>
      </line>
      <line no="264">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="265">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="266">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="267"/>
    </source>
  </file>
</phpunit>
